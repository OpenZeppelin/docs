#!/usr/bin/env node

const fs = require("node:fs").promises;
const path = require("node:path");
const { execSync } = require("node:child_process");

// Check if two arguments are provided
if (process.argv.length !== 4) {
	console.error("Usage: node generate-changelog.js <repo_url> <file_path>");
	process.exit(1);
}

// Assign arguments to variables
const url = process.argv[2];
const filePath = process.argv[3];

// Check if changelog-from-release is installed
function checkChangelogFromRelease() {
	try {
		// Try to run the command to see if it exists
		execSync("which changelog-from-release", { stdio: "pipe" });
	} catch (error) {
		console.error("Error: changelog-from-release is not installed.");
		console.error(
			"Please install it from: https://github.com/rhysd/changelog-from-release",
		);
		process.exit(1);
	}
}

async function generateChangelog() {
	try {
		// Create the changelog.mdx file with the specified content
		const frontmatter = `---
title: Changelog
---

`;

		// Run changelog-from-release and get output
		const changelogOutput = execSync(`changelog-from-release -r "${url}"`, {
			encoding: "utf8",
			stdio: "pipe",
		});

		// Remove the generated tag at the end
		const cleanOutput = changelogOutput
			.replace(/<!-- Generated by .* -->\s*$/, "")
			.trim();

		// Write the complete content
		const fullContent = frontmatter + cleanOutput + "\n";
		await fs.writeFile(
			path.join(filePath, "changelog.mdx"),
			fullContent,
			"utf8",
		);

		console.log(
			`Changelog generated successfully at ${path.join(filePath, "changelog.mdx")}`,
		);
	} catch (error) {
		console.error("Error generating changelog:", error.message);
		process.exit(1);
	}
}

// Check if required tool is installed
checkChangelogFromRelease();

generateChangelog();
